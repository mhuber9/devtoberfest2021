const { cqn2odata, getSafeNumber: safeNumber } = require('./cqn2odata')

const strict = {
  functions: {
    contains: 1,
    startswith: 1,
    endswith: 1,
    tolower: 1,
    toupper: 1,
    length: 1,
    indexof: 1,
    substring: 1,
    trim: 1,
    concat: 1,
    year: 1,
    month: 1,
    day: 1,
    hour: 1,
    minute: 1,
    second: 1,
    time: 1,
    now: 1
  }
}

let parser = require('./odata2cqn')
const odata = {
  parse: {
    url(url, o = {}) {
      o = o === 'strict' ? { strict } : o.strict ? { ...o, strict } : o

      const uri = decodeURIComponent(url)
      let parsed = parser.parse(uri, { ...o, safeNumber })

      if (typeof o.afterburner === 'function') parsed = o.afterburner(parsed)
      return parsed
    }
  },

  urlify: cqn2odata,

  to: {
    cqn: (url, o) => odata.parse(url, o),
    url: (cqn, kind, model) => odata.urlify(cqn, kind, model)
  },

  genParser() {
    const source = __filename.replace('index.js', 'odata2cqn.pegjs')
    const grammar = require('fs').readFileSync(source, 'utf8')
    parser = require('pegjs').generate(grammar)
    return parser
  }
}

module.exports = odata
